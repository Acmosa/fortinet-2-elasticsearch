input {

    pipeline {
        address => "kv_syslog"
    }

}

filter {

    mutate{ copy => {"message" => "[event][original]"} }


    # event.created        when the event is created by logstash
    
    grok {
        match => ["message", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:message}"]
        overwrite => ["message"]
        tag_on_failure => ["syslog_grok_failure"]
        add_field => ["[event][created]", "%{@timestamp}"] 
    }

    if "syslog_grok_failure" not in [tag_on_failure]{
        kv {
          source => "message"
          value_split => "="
          field_split => " "
        }

        # fortisandbox 
        if [tz] =~  /[A-Z]+/{
            mutate {
            replace => {"temp_time" => "%{date}T%{time}Z" }
            add_field => {"tags" => "_tz_is_not_number"}
            }
        
        }

        # fortigate 6.2.X    
        else if [tz]{
            mutate{
            replace => {"temp_time" => "%{date} %{time} %{tz}"}
            }
        } 
        
        # forti* without tz
        else {
            mutate{
            replace => {"temp_time" => "%{date} %{time}"}
            }
        }
        
        # Just for avoid errors in timestamp field
        if !([event][timezone]) {
            mutate { 
                add_field => {"[event][timezone]" => "America/Lima" }
                add_field => {"[tags]" => "setting_default_timezone" }
            }
        }        

        date {
            match => ["temp_time", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss Z", "ISO8601"]
            timezone => "%{[event][timezone]}"
            target => "@timestamp"
            tag_on_failure => ["_dateparsefailure_kv_syslog"]
            
        }
    
        mutate{remove_field => ["date","time","syslog_index","message","temp_time"]}

    }
    
}

output {
    
    if [event][module]=="fortigate" {
        pipeline{
            send_to => "fortigate_2_ecs"
        }
    }
    else if [event][module]=="fortiweb" {
        pipeline{
            send_to => "fortiweb_2_ecs"
        }
      }
    else if [event][module]=="fortisandbox" {
        pipeline{
            send_to => "fortisandbox_2_ecs"
        }
    }
    else if [event][module]=="fortimail" {
        pipeline{
            send_to => "fortimail_2_ecs"
        }
    }
    else if [event][module]=="fortiauthenticator" {
        pipeline{
            send_to => "fortiauthenticator_2_ecs"
        }
    }
    
}
